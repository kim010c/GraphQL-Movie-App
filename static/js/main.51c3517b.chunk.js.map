{"version":3,"sources":["apolloClient.js","queries.js","Movie.js","Home.js","Detail.js","App.js","globalStyles.js","index.js"],"names":["client","ApolloClient","uri","HOME_PAGE","gql","MOVIE_DETAILS","Card","styled","div","props","background","Title","span","Movie","id","title","rating","poster","to","Container","Home","query","loading","data","error","movies","map","movie","key","medium_cover_image","Image","withComponent","h1","Paragraph","bold","MovieContainer","Detail","movieId","match","params","variables","Fragment","src","description_intro","suggestions","App","exact","path","component","Component","createGlobalStyle","reset","ReactDOM","render","document","getElementById"],"mappings":"4QAMeA,EAJA,I,MAAIC,GAAa,CAC9BC,IAAK,4B,+kBCDA,IAAMC,EAAYC,IAAH,KAUTC,EAAgBD,IAAH,K,koBCP1B,IAAME,EAAOC,UAAOC,IAAV,KAGY,SAAAC,GAAK,oBAAWA,EAAMC,WAAjB,QASrBC,EAAQJ,UAAOK,KAAV,KA6BIC,EAjBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,OAAtB,OACZ,kBAAC,IAAD,CAAMC,GAAE,mBAAcJ,IACpB,kBAACR,EAAD,CAAMI,WAAYO,GAChB,kBAACN,EAAD,KACGI,EADH,MACaC,EADb,mB,mLC1BN,IAAMG,EAAYZ,UAAOC,IAAV,KA2BAY,EApBF,kBACX,kBAACD,EAAD,KACE,kBAAC,IAAD,CAAOE,MAAOlB,IACX,YAA+B,IAA5BmB,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACjB,OAAIF,EAAgB,UAChBE,EAAc,qBACXD,EAAKE,OAAOC,KAAI,SAAAC,GAAK,OAC1B,kBAAC,EAAD,CACEb,GAAIa,EAAMb,GACVc,IAAKD,EAAMb,GACXG,OAAQU,EAAME,mBACdd,MAAOY,EAAMZ,MACbC,OAAQW,EAAMX,iB,+xBCnB1B,IAAMG,EAAYZ,UAAOC,IAAV,KAYTsB,EANOvB,UAAOC,IAAV,KAMSuB,cAAc,OAE3BpB,EAAQJ,UAAOyB,GAAV,KAKLC,EAAY1B,UAAOK,KAAV,KAGE,SAAAH,GAAK,OAAKA,EAAMyB,KAAO,MAAQ,SAG1CC,EAAiB5B,UAAOC,IAAV,KA6CL4B,EArCA,SAAC,GAAD,IAEDC,EAFC,EACbC,MACEC,OAAUF,QAFC,OAKb,kBAAC,IAAD,CAAOhB,MAAOhB,EAAemC,UAAW,CAAEH,aACvC,YAA+B,IAA5Bf,EAA2B,EAA3BA,QAASE,EAAkB,EAAlBA,MAAOD,EAAW,EAAXA,KAClB,OAAID,EAAgB,UAChBE,EAAc,QAEhB,kBAAC,IAAMiB,SAAP,KACE,kBAAC,EAAD,KACE,kBAACX,EAAD,CAAOY,IAAKnB,EAAKI,MAAME,qBACvB,8BACE,kBAAC,EAAD,KAAQN,EAAKI,MAAMZ,OACnB,kBAACkB,EAAD,CAAWC,MAAI,GAAf,WAAyBX,EAAKI,MAAMX,QACpC,kBAACiB,EAAD,KAAYV,EAAKI,MAAMgB,qBAG3B,kBAAC,EAAD,kBACA,kBAACR,EAAD,KACGZ,EAAKqB,YAAYlB,KAAI,SAAAC,GAAK,OACzB,kBAAC,EAAD,CACEC,IAAKD,EAAMb,GACXA,GAAIa,EAAMb,GACVC,MAAOY,EAAMZ,MACbC,OAAQW,EAAMX,OACdC,OAAQU,EAAME,8BC5CfgB,E,iLAbX,OACE,kBAAC,IAAD,CAAgB7C,OAAQA,GACtB,kBAAC,IAAD,KACE,8BACE,kBAAC,IAAD,CAAO8C,OAAO,EAAMC,KAAM,IAAKC,UAAW5B,IAC1C,kBAAC,IAAD,CAAO2B,KAAM,oBAAqBC,UAAWZ,W,GAPvCa,a,gXCLlBC,4BAAiB,IAEbC,KCCJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.51c3517b.chunk.js","sourcesContent":["import ApolloClient from \"apollo-boost\";\n\nconst client = new ApolloClient({\n  uri: \"https://movieql.now.sh/\"\n});\n\nexport default client;\n","import gql from \"graphql-tag\";\n\nexport const HOME_PAGE = gql`\n  {\n    movies(limit: 50, rating: 7) {\n      id\n      title\n      rating\n      medium_cover_image\n    }\n  }\n`;\nexport const MOVIE_DETAILS = gql`\n  query getMovieDetails($movieId: Int!) {\n    movie(id: $movieId) {\n      medium_cover_image\n      title\n      rating\n      description_intro\n      language\n      genres\n    }\n    suggestions(id: $movieId) {\n      id\n      title\n      rating\n      medium_cover_image\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Card = styled.div`\n  border-radius: 15px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  background-image: ${props => `url(${props.background})`};\n  background-size: cover;\n  background-position: center center;\n  height: 300px;\n  width: 200px;\n  margin-bottom: 40px;\n  position: relative;\n`;\n\nconst Title = styled.span`\n  background-color: white;\n  width: auto;\n  padding: 10px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  position: absolute;\n  bottom: 25px;\n  left: 0;\n  right: 0;\n  margin: auto;\n`;\n\nconst Movie = ({ id, title, rating, poster }) => (\n  <Link to={`/details/${id}`}>\n    <Card background={poster}>\n      <Title>\n        {title} / {rating}⭐️\n      </Title>\n    </Card>\n  </Link>\n);\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n  poster: PropTypes.string.isRequired\n};\n\nexport default Movie;\n","import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport styled from \"styled-components\";\nimport { HOME_PAGE } from \"./queries\";\nimport Movie from \"./Movie\";\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 0.7fr);\n  flex-wrap: wrap;\n  justify-items: center;\n`;\n\nconst Home = () => (\n  <Container>\n    <Query query={HOME_PAGE}>\n      {({ loading, data, error }) => {\n        if (loading) return \"loading\";\n        if (error) return \"something happened\";\n        return data.movies.map(movie => (\n          <Movie\n            id={movie.id}\n            key={movie.id}\n            poster={movie.medium_cover_image}\n            title={movie.title}\n            rating={movie.rating}\n          />\n        ));\n      }}\n    </Query>\n  </Container>\n);\n\nexport default Home;\n","import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { MOVIE_DETAILS } from \"./queries\";\nimport Movie from \"./Movie\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  margin-bottom: 50px;\n`;\n\nconst Card = styled.div`\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  background-color: white;\n  border-radius: 7px;\n`;\n\nconst Image = Card.withComponent(\"img\");\n\nconst Title = styled.h1`\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\n\nconst Paragraph = styled.span`\n  margin-bottom: 10px;\n  display: block;\n  font-weight: ${props => (props.bold ? \"500\" : \"400\")};\n`;\n\nconst MovieContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 0.7fr);\n  flex-wrap: wrap;\n  justify-items: center;\n  margin-top: 50px;\n`;\n\nconst Detail = ({\n  match: {\n    params: { movieId }\n  }\n}) => (\n  <Query query={MOVIE_DETAILS} variables={{ movieId }}>\n    {({ loading, error, data }) => {\n      if (loading) return \"loading\";\n      if (error) return \"error\";\n      return (\n        <React.Fragment>\n          <Container>\n            <Image src={data.movie.medium_cover_image} />\n            <span>\n              <Title>{data.movie.title}</Title>\n              <Paragraph bold>Rating: {data.movie.rating}</Paragraph>\n              <Paragraph>{data.movie.description_intro}</Paragraph>\n            </span>\n          </Container>\n          <Title>Suggested</Title>\n          <MovieContainer>\n            {data.suggestions.map(movie => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                rating={movie.rating}\n                poster={movie.medium_cover_image}\n              />\n            ))}\n          </MovieContainer>\n        </React.Fragment>\n      );\n    }}\n  </Query>\n);\n\nexport default Detail;\n","import React, { Component } from \"react\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport client from \"./apolloClient\";\nimport Home from \"./Home\";\nimport Detail from \"./Detail\";\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Router>\n          <main>\n            <Route exact={true} path={\"/\"} component={Home} />\n            <Route path={\"/details/:movieId\"} component={Detail} />\n          </main>\n        </Router>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\ncreateGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Maven+Pro:400,500');\n  ${reset};\n  body{\n    font-family: 'Maven Pro', sans-serif;\n    background-color: #ecf0f1;\n  }\n  a{\n      color:inherit;\n  }\n  main {\n    width: 80%;\n    margin: 0 auto;\n    padding: 20px;\n  }\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./globalStyles\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}